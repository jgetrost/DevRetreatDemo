// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Strengths.API.Data;

namespace Strengths.API.Migrations
{
    [DbContext(typeof(StrengthsContext))]
    [Migration("20190610023037_RemovedNestedThemesInDomain")]
    partial class RemovedNestedThemesInDomain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Strengths.Shared.Models.Domain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Domain");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Strategic Thinking"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Executing"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Influencing"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Relationship Building"
                        });
                });

            modelBuilder.Entity("Strengths.Shared.Models.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DomainId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("Theme");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DomainId = 1,
                            Title = "Analytical"
                        },
                        new
                        {
                            Id = 2,
                            DomainId = 1,
                            Title = "Context"
                        },
                        new
                        {
                            Id = 3,
                            DomainId = 1,
                            Title = "Futuristic"
                        },
                        new
                        {
                            Id = 4,
                            DomainId = 1,
                            Title = "Ideation"
                        },
                        new
                        {
                            Id = 5,
                            DomainId = 1,
                            Title = "Input"
                        },
                        new
                        {
                            Id = 6,
                            DomainId = 1,
                            Title = "Intellection"
                        },
                        new
                        {
                            Id = 7,
                            DomainId = 1,
                            Title = "Learner"
                        },
                        new
                        {
                            Id = 8,
                            DomainId = 1,
                            Title = "Strategic"
                        },
                        new
                        {
                            Id = 9,
                            DomainId = 2,
                            Title = "Achiever"
                        },
                        new
                        {
                            Id = 10,
                            DomainId = 2,
                            Title = "Arranger"
                        },
                        new
                        {
                            Id = 11,
                            DomainId = 2,
                            Title = "Belief"
                        },
                        new
                        {
                            Id = 12,
                            DomainId = 2,
                            Title = "Consistency"
                        },
                        new
                        {
                            Id = 13,
                            DomainId = 2,
                            Title = "Deliberative"
                        },
                        new
                        {
                            Id = 14,
                            DomainId = 2,
                            Title = "Discipline"
                        },
                        new
                        {
                            Id = 15,
                            DomainId = 2,
                            Title = "Focus"
                        },
                        new
                        {
                            Id = 16,
                            DomainId = 2,
                            Title = "Responsibility"
                        },
                        new
                        {
                            Id = 17,
                            DomainId = 2,
                            Title = "Restorative"
                        },
                        new
                        {
                            Id = 18,
                            DomainId = 3,
                            Title = "Activator"
                        },
                        new
                        {
                            Id = 19,
                            DomainId = 3,
                            Title = "Command"
                        },
                        new
                        {
                            Id = 20,
                            DomainId = 3,
                            Title = "Communication"
                        },
                        new
                        {
                            Id = 21,
                            DomainId = 3,
                            Title = "Competition"
                        },
                        new
                        {
                            Id = 22,
                            DomainId = 3,
                            Title = "Maximizer"
                        },
                        new
                        {
                            Id = 23,
                            DomainId = 3,
                            Title = "Self-Assurance"
                        },
                        new
                        {
                            Id = 24,
                            DomainId = 3,
                            Title = "Significance"
                        },
                        new
                        {
                            Id = 25,
                            DomainId = 3,
                            Title = "Woo"
                        },
                        new
                        {
                            Id = 26,
                            DomainId = 4,
                            Title = "Adaptability"
                        },
                        new
                        {
                            Id = 27,
                            DomainId = 4,
                            Title = "Connectedness"
                        },
                        new
                        {
                            Id = 28,
                            DomainId = 4,
                            Title = "Developer"
                        },
                        new
                        {
                            Id = 29,
                            DomainId = 4,
                            Title = "Empathy"
                        },
                        new
                        {
                            Id = 30,
                            DomainId = 4,
                            Title = "Harmony"
                        },
                        new
                        {
                            Id = 31,
                            DomainId = 4,
                            Title = "Includer"
                        },
                        new
                        {
                            Id = 32,
                            DomainId = 4,
                            Title = "Individualization"
                        },
                        new
                        {
                            Id = 33,
                            DomainId = 4,
                            Title = "Positivity"
                        },
                        new
                        {
                            Id = 34,
                            DomainId = 4,
                            Title = "Relator"
                        });
                });

            modelBuilder.Entity("Strengths.Shared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int?>("Theme1Id");

                    b.Property<int?>("Theme2Id");

                    b.Property<int?>("Theme3Id");

                    b.Property<int?>("Theme4Id");

                    b.Property<int?>("Theme5Id");

                    b.HasKey("Id");

                    b.HasIndex("Theme1Id");

                    b.HasIndex("Theme2Id");

                    b.HasIndex("Theme3Id");

                    b.HasIndex("Theme4Id");

                    b.HasIndex("Theme5Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "James",
                            LastName = "Getrost",
                            Theme1Id = 1,
                            Theme2Id = 2,
                            Theme3Id = 34,
                            Theme4Id = 21,
                            Theme5Id = 4
                        });
                });

            modelBuilder.Entity("Strengths.Shared.Models.Theme", b =>
                {
                    b.HasOne("Strengths.Shared.Models.Domain", "Domain")
                        .WithMany()
                        .HasForeignKey("DomainId");
                });

            modelBuilder.Entity("Strengths.Shared.Models.User", b =>
                {
                    b.HasOne("Strengths.Shared.Models.Theme", "Theme1")
                        .WithMany()
                        .HasForeignKey("Theme1Id");

                    b.HasOne("Strengths.Shared.Models.Theme", "Theme2")
                        .WithMany()
                        .HasForeignKey("Theme2Id");

                    b.HasOne("Strengths.Shared.Models.Theme", "Theme3")
                        .WithMany()
                        .HasForeignKey("Theme3Id");

                    b.HasOne("Strengths.Shared.Models.Theme", "Theme4")
                        .WithMany()
                        .HasForeignKey("Theme4Id");

                    b.HasOne("Strengths.Shared.Models.Theme", "Theme5")
                        .WithMany()
                        .HasForeignKey("Theme5Id");
                });
#pragma warning restore 612, 618
        }
    }
}
